Enhancements to UI/MapView:

This release has several fixed to the MapView on both Android and iOS. Mostly fixes related to stability on Android and extra functionality to make it easier to implement custom functionality on top of the MapView or markers.

- Improved Android version by recycling images instead of destroy and recreate.
- Added a ScaleFactor to manually control the MapView density settings.
- Added extra properties to the MapView to get current state.
- Added a Native platform-specific initialization process to enable some platform-specific functionality to be injected into OsmSharp.
- Added better Pause() and Resume() functionality on Android.
- Added missing polygon functionality to LayerPrimitive. #122.
- Refactored markers. Allow any custom view on top of the MapView for both iOS and Android.
- Improved MapViewAnimator with CubicBezier algorithm.
- Added Tag property to MapView.
- Added ability to limit MapView to bounding box. #55
- Added cachesize option to LayerMBTile constructor. #158
- Fixed density scaling and of MapViewSurface and Makers on Android.
- Added IsVisible to Layer. #123.

Enhancements & optimization of routing:

Routing optimizations are focused on memory optimizations and flexibility in adding extra options to the routing algorithm(s). One part of the effort was getting the graph preprocessor to process using less RAM and thus enabling OsmSharp to preprocess bigger areas of raw OSM-data and even the entire planet. The extra routing options are focused on an upcoming release of https://github.com/OsmSharp/OsmSharp.Transit.

- Added extra options to some IBasicRouter calls to better support customized routing.
- Changed Arc to Edge in all Graph related teminology to remove inconsistent naming.
- Added the option to calculate only route stats. #125
- Performance improvements in GraphStreamTargets, building routing graphs from raw OSM-data now a lot faster.
- Performance improvments to the PBFReader, reading raw OSM-data now a lot faster.
- Implemented memorymapped arrays to store part of the routing graph on disk while processing huge amounts of raw OSM-data.
- Removed obsolete graph serialization options and removed v2 namespace.
- Improved flatfile tags deserialization. #133

Improving instruction generation:

Several issues releated to the instruction generation and using the routing functionality as a webservice. The routing object is now easy to serialize/deserialize and contains more information about distance and time. Generated instuctions now also contain more information and easier to consume.

- Improvements to ArcAggregator to again allow for better support for customized routing.
- Enhanced and changed Route object to allow for easier serialization/deserialization. #147
- Added DistanceToEnd to RouteTracker. #143
- Refactored Route object to make sense and added timings to route output. #143
- Added extra flexibility to instruction generation. #142, #141
- Better controle over instructions. #145
- Vehicle names are now case-insensitive. #135

Bugfixes:

- Fixed polygon width on Android. #85.
- Fixed progress filter to follow normal OsmStreamFilter-pattern.
- Fix for frequent crashes on Android when using native cache. #126
- Fixed NullPointerException in MapViewSurface. #130
- Fixed MapView checks on Min/MaxZoom.
- Fix double-tap zoom issue for iOS. #134
- Fixed missing change event on adding a route to LayerRoute. Fixes #120.
- Fixed iOS initial rendering issue. Fixes #121.
- Fixed rotation and panning/pinch bug reported by @TomQv.
- Updated the LayerRoute with invalidation event after clearing data. #150.
- Fixed pinched zoom not respecting Min/MaxZoom on iOS.
- Fixed MapView initialization from XIB. #154

This release was made possible by 209 commits, 9 pull requests by @xivk, @txsmith, @langsweirdt, @kochizufan